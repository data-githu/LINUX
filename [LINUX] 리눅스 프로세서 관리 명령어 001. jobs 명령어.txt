리눅스 프로세서 관리 명령어 001. jobs 명령어

동작중인 작업의 상태를 확인하는 명령어

*상태 정보 4가지
	1. running : 실행중
	2. stopped : 일시중단중
	3. Done : 종료
	4. terminated : 강제종료

예제 : $ vi hhh.txt
select ename, sal, job, deptno
	from emp
	where
	
esc 키를 누르고 ctl + z 를 눌러서 하던 작업을 취소합니다.
[1]                     +              Stopped                 vim hhh.txt
↑               ↑              ↑
job 번호    현재진행   일시중단중

$jobs <-- 동작중인 작업의 상태를 확인하는 명령어
$fg <-- 현재 진행중이었던 job으로 접속하는 명령어

문제163. 아래와 같이 일시중단된 job 파일을 만드시오.
$ vi hhh2.txt
select
esc 누르고 ctl+z

$ vi hhh3.txt
select ename
esc 누르고 ctl+z

$ vi hhh4.txt
select ename, sal
esc 누르고 ctl+z

(base) [scott@localhost ~]$ vi hhh2.txt

[1]+  Stopped                 vim hhh2.txt
(base) [scott@localhost ~]$ vi hhh3.txt

[2]+  Stopped                 vim hhh3.txt
(base) [scott@localhost ~]$ vi hhh4.txt

[3]+  Stopped                 vim hhh4.txt
(base) [scott@localhost ~]$ jobs
[1]   Stopped                 vim hhh2.txt
[2]-  Stopped                 vim hhh3.txt
[3]+  Stopped                 vim hhh4.txt

※ 설명 
+ : 현재 job
­­- : 현재 이전에 현재 job이였던 job

문제164. 위의 상태에서 2번 job에 들어가고 싶다면 ?
$ fg 2

문제165. 위의 상태에서 아래의 백그라운드로 돌리는 sar 명령어를 수행하고 출력되는 결과를 해석하시오!
$ sar 1 100 >> sar_2021.txt &

   [4]               4052
  ↑                  ↑  
job번호     프로세서 번호